{"version":3,"sources":["webpack:///(webpack)/hot sync nonrecursive ^\\.\\/log$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_Services/alertify.service.ts","webpack:///./src/app/_Services/auth.service.ts","webpack:///./src/app/_Services/error.interceptor.ts","webpack:///./src/app/_Services/user.service.ts","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver..ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./log\": \"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/hot sync ^\\\\.\\\\/log$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\nconstructor() { }\r\n\r\nconfirm(message: string, okCallback: () => any) {\r\n  alertify.confirm(message, function(e) {\r\n    if (e) {\r\n      okCallback();\r\n    } else {}\r\n  });\r\n  }\r\n\r\n  success (message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error (message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning (message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message (message: string) {\r\n    alertify.message(message);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from '../../environments/environment';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl + 'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n  currentUser: User;\r\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\r\n  currentPhotoUrl = this.photoUrl.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  changeMemberPhoto(photoUrl: string) {\r\n    this.photoUrl.next(photoUrl);\r\n  }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model).pipe(\r\n      map((response: any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('token', user.token);\r\n          localStorage.setItem('user', JSON.stringify(user.user));\r\n          this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          this.currentUser = user.user;\r\n          this.changeMemberPhoto(this.currentUser.photoUrl);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n      return next.handle(req).pipe(\r\n        catchError(error => {\r\n          if (error instanceof HttpErrorResponse) {\r\n            if (error.status === 401) {\r\n              return throwError(error.statusText);\r\n            }\r\n            const applicationError = error.headers.get('Application-Error');\r\n            if (applicationError) {\r\n              console.error(applicationError);\r\n              return throwError(applicationError);\r\n            }\r\n            const serverError = error.error;\r\n            let modelStateErrors = '';\r\n            if (serverError && typeof serverError === 'object') {\r\n              for (const key in serverError) {\r\n                if (serverError[key]) {\r\n                  modelStateErrors += serverError[key] + '\\n';\r\n                }\r\n              }\r\n            }\r\n            return throwError(modelStateErrors || serverError || 'Server Error');\r\n          }\r\n        })\r\n      );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { map } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\n\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n  })\r\n};\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\r\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\r\n\r\n    const myHeaders = new HttpHeaders().set('Authorization', 'Bearer ' + localStorage.getItem('token')); // create header object\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    if (userParams != null) {\r\n      params = params.append('minAge', userParams.minAge);\r\n      params = params.append('maxAge', userParams.maxAge);\r\n      params = params.append('gender', userParams.gender);\r\n      params = params.append('orderBy', userParams.orderBy);\r\n    }\r\n\r\n    if (likesParam === 'Likers') {\r\n      params = params.append('Likers', 'true');\r\n    }\r\n\r\n    if (likesParam === 'Likees') {\r\n      params = params.append('Likees', 'true');\r\n    }\r\n\r\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response',  params: params, headers: myHeaders})\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n  getUser(id): Observable<User> {\r\n    return this.http.get<User>(this.baseUrl + 'users/' + id, httpOptions);\r\n  }\r\n\r\n  updateUser(id: number, user: User) {\r\n    return this.http.put(this.baseUrl + 'users/' + id, user, httpOptions);\r\n  }\r\n\r\n  setMainPhoto(userId: number, id: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {}, httpOptions);\r\n  }\r\n\r\n  deletePhoto(userId: number, id: number) {\r\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id, httpOptions);\r\n  }\r\n\r\n  sendLike(id: number, recipientId: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {}, httpOptions);\r\n  }\r\n\r\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\r\n    const myHeaders = new HttpHeaders().set('Authorization', 'Bearer ' + localStorage.getItem('token')); // create header object\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('MessageContainer', messageContainer);\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params: params, headers: myHeaders})\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') !== null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n          }\r\n\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n  getMessageThread(id: number, recipientId: number) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId, httpOptions);\r\n  }\r\n\r\n  sendMessage(id: number, message: Message) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message, httpOptions);\r\n  }\r\n\r\n  deleteMessage(id: number, userId: number) {\r\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {}, httpOptions);\r\n  }\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\r\n      .subscribe();\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router,\r\n    private alertify: AlertifyService) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.alertify.error('You shall not pass!!!');\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n    canDeactivate(component: MemberEditComponent) {\r\n        if (component.editForm.dirty) {\r\n            return confirm('Are you sure you want to continue?  Any unsaved changes will be lost');\r\n        } else {\r\n        return true;\r\n        }\r\n    }\r\n}\r\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {User} from '../_models/user';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { UserService } from '../_Services/user.service';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likesParam = 'Likers';\r\n\r\n  constructor(private userService: UserService, private router: Router,\r\n      private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n      return this.userService.getUsers(this.pageNumber, this.pageSize, null, this.likesParam).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving data');\r\n              this.router.navigate(['/home']);\r\n              return of(null);\r\n          })\r\n      );\r\n  }\r\n}\r\n\r\n","import { catchError } from 'rxjs/operators';\r\nimport { User } from './../_models/user';\r\nimport { AlertifyService } from './../_Services/alertify.service';\r\nimport { UserService } from './../_Services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n  constructor(private userService: UserService, private router: Router,\r\n      private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n      return this.userService.getUser(route.params['id']).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving data');\r\n              this.router.navigate(['/members']);\r\n              return of(null);\r\n          })\r\n      );\r\n  }\r\n}\r\n\r\n","import { AuthService } from './../_Services/auth.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\nimport { UserService } from '../_Services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n  constructor (private userService: UserService,\r\n    private authServive: AuthService,\r\n    private router: Router,\r\n    private alertfiy: AlertifyService) {}\r\n\r\nresolve(route: ActivatedRouteSnapshot): Observable<User> {\r\nreturn this.userService.getUser(this.authServive.decodedToken.nameid)\r\n    .pipe(\r\n        catchError(error => {\r\n            this.alertfiy.error('Problem retrieving your data: ' + error);\r\n            this.router.navigate(['/members']);\r\n            return of(null);\r\n        })\r\n    );\r\n}\r\n}\r\n\r\n","import { catchError } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\nimport { UserService } from '../_Services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n\r\n  constructor(private userService: UserService, private router: Router,\r\n      private alertify: AlertifyService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n      return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving data');\r\n              this.router.navigate(['/home']);\r\n              return of(null);\r\n          })\r\n      );\r\n  }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, Router, ActivatedRouteSnapshot} from '@angular/router';\r\nimport { UserService } from '../_Services/user.service';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_Services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private userService: UserService, private router: Router,\r\n        private alertify: AlertifyService, private authService: AuthService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n        return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n              this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving messages');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!Doctype html>\\r\\n<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './_Services/auth.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from './_models/user';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n  jwtHelper = new JwtHelperService();\r\n\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    const token = localStorage.getItem('token');\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n    if (user) {\r\n      this.authService.currentUser = user;\r\n      this.authService.changeMemberPhoto(user.photoUrl);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BsDropdownModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertifyService } from './_Services/alertify.service';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { NgxGalleryModule } from 'ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport {TimeAgoPipe} from 'time-ago-pipe';\r\n// =================================================================\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_Services/error.interceptor';\r\nimport { AuthService } from './_Services/auth.service';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { UserService } from './_Services/user.service';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver.';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\n\r\n\r\nexport function tokengetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      MemberListComponent,\r\n      ListsComponent,\r\n      MessagesComponent,\r\n      MemberCardComponent,\r\n      MemberDetailComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      TimeAgoPipe,\r\n      MemberMessagesComponent\r\n      ],\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      TabsModule.forRoot(),\r\n      ButtonsModule.forRoot(),\r\n      BsDropdownModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      ReactiveFormsModule,\r\n      JwtModule.forRoot({\r\n        config: {\r\n          tokenGetter: () => localStorage.getItem('tokken'),\r\n          whitelistedDomains: ['localhost:5000'],\r\n          blacklistedRoutes: ['localhost:5000/api/auth']\r\n        }\r\n      })\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorInterceptorProvider,\r\n      AlertifyService,\r\n      AuthGuard,\r\n      UserService,\r\n      MemberDetailResolver,\r\n      MemberListResolver,\r\n      MemberEditResolver,\r\n      PreventUnsavedChanges,\r\n      ListsResolver,\r\n      MessagesResolver\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n<div  *ngIf=\\\"!registerMode\\\" class=\\\"text-center\\\">\\n  <h1>Find your match</h1>\\n  <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n  <div class=\\\"text-center\\\">\\n    <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n    <button class=\\\"btn btn-info btn-lg\\\">Learn More</button>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n  </div>\\n</div>\\n\\n<!-- <p *ngFor=\\\"let value of values\\\">{{value.name}}</p> -->\\n\\n\\n\"","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nregisterMode = false;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\r\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\'ve Liked'}} : {{pagination.totalItems}}</h2>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container mt-3\\\">\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"btn-group\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\r\\n    <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\r\\n    <app-member-card [user]=\\\"user\\\"></app-member-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n<pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n  (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\"\\r\\n  >\\r\\n\\r\\n</pagination>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Pagination, PaginatedResult } from '../_models/pagination';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { UserService } from '../_Services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  users: User[];\r\n  pagination: Pagination;\r\n  likesParam: string;\r\n\r\n  constructor(private authService: AuthService, private userService: UserService,\r\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n    this.likesParam = 'Likers';\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\r\n      .subscribe((res: PaginatedResult<User[]>) => {\r\n        this.users = res.result;\r\n        this.pagination = res.pagination;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n}\r\n","module.exports = \".card:hover img {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n  -webkit-transform: scale(1.0, 1.0);\\r\\n          transform: scale(1.0, 1.0);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out;\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n  position: absolute;\\r\\n  botom: -30%;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  margin-right: auto;\\r\\n  margin-left: auto;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n  bottom: 0;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n  transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"card mb-4\\\">\\r\\n  <div class=\\\"card-img-wrapper\\\">\\r\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n\\r\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\r\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\r\\n          [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\r\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\"><i class=\\\"fa fa-heart\\\"></i></button></li>\\r\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\" ><i class=\\\"fa fa-envelope\\\"></i></button></li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"card-body p-1\\\">\\r\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\r\\n      {{user.knownAs}}, {{user.age}}\\r\\n    </h6>\\r\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { UserService } from 'src/app/_Services/user.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { AuthService } from 'src/app/_Services/auth.service';\r\nimport { AlertifyService } from 'src/app/_Services/alertify.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n@Input() user: User; // pass the user in\r\n\r\nconstructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\r\n\r\nngOnInit() {\r\n}\r\n\r\nsendLike(id: number) {\r\n  this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\r\n    this.alertify.success('You have liked: ' + this.user.knownAs);\r\n  }, error => {\r\n    this.alertify.error(error);\r\n  });\r\n}\r\n\r\n}\r\n","module.exports = \".img-thumbnail {\\r\\n  margin: 25px;\\r\\n  width: 85%;\\r\\n  height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  padding: 0 25px;\\r\\n\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n  padding: 10px 15px;\\r\\n  background-color: #fff;\\r\\n  border-top: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n     <h1>{{user.knownAs}}'s Profile</h1>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user?.photoUrl || '../../../../../assets/user.png'}}\\\" alt=\\\"{{user?.knownAs}}\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div>\\r\\n            <strong>Location:</strong>\\r\\n            <p>{{user.city}}, {{user.country}}</p>\\r\\n\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Age:</strong>\\r\\n            <p>{{user.age}}</p>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <strong>Last Active:</strong>\\r\\n            <p>{{user.lastActive | timeAgo}}</p>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <strong>Member Since:</strong>\\r\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"btn-group d-flex\\\">\\r\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\r\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"tab-panel\\\">\\r\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\r\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\r\\n            <h4>Description</h4>\\r\\n            <p>{{user.introduction}}</p>\\r\\n            <h4>Looking For</h4>\\r\\n            <p>{{user.lookingFor}}</p>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Interests\\\">\\r\\n            <h4>Interests</h4>\\r\\n            <p>{{user.interests}}</p>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Photos\\\">\\r\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\r\\n          </tab>\\r\\n          <tab heading=\\\"Messages\\\">\\r\\n            <app-member-messages [recipientId]=\\\"user.id\\\"></app-member-messages>\\r\\n          </tab>\\r\\n        </tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\r\n\r\nimport { AlertifyService } from './../../_Services/alertify.service';\r\nimport { UserService } from './../../_Services/user.service';\r\nimport { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { User } from 'src/app/_models/user';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TabsetComponent } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\r\n  user: User;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n\r\n  constructor(private userService: UserService, private alertify: AlertifyService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const selectedTab = params['tab'];\r\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\r\n    });\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ];\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages() {\r\n    const imageUrls = [];\r\n    for (let i = 0; i < this.user.photos.length; i++) {\r\n      imageUrls.push({\r\n        small: this.user.photos[i].url,\r\n        medium: this.user.photos[i].url,\r\n        big: this.user.photos[i].url,\r\n        description: this.user.photos[i].description\r\n      });\r\n      return imageUrls;\r\n    }\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n}\r\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <h1>Your Profile</h1>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\r\\n        <strong>Information:</strong> You have made changes.  Any unsaved changes will be lost!\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl || '../../../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div>\\r\\n            <strong>Location:</strong>\\r\\n            <p>{{user.city}}, {{user.country}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Age:</strong>\\r\\n            <p>{{user.age}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Last Active:</strong>\\r\\n            <p>{{user.lastActive | timeAgo}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Member Since:</strong>\\r\\n            <p>{{user.created | date:'mediumDate' }}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n            <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"tab-panel\\\">\\r\\n        <tabset class=\\\"member-tabset\\\">\\r\\n          <tab heading=\\\"Edit Profile\\\">\\r\\n\\r\\n            <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\r\\n                <h4>Description</h4>\\r\\n                <textarea class=\\\"form-control\\\" name=\\\"introduction\\\" rows=\\\"6\\\"\\r\\n                  [(ngModel)]=\\\"user.introduction\\\"></textarea>\\r\\n                <h4>Looking For</h4>\\r\\n                <textarea class=\\\"form-control\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\"\\r\\n                  [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\r\\n                  <h4>Interests</h4>\\r\\n                  <textarea class=\\\"form-control\\\" name=\\\"interests\\\" rows=\\\"6\\\"\\r\\n                    [(ngModel)]=\\\"user.interests\\\"></textarea>\\r\\n                  <h4>Location Details:</h4>\\r\\n                <div class=\\\"form-inline\\\">\\r\\n                  <label for=\\\"city\\\">City</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\r\\n                  <label for=\\\"country\\\">City</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n          </tab>\\r\\n          <tab heading=\\\"Edit Photos\\\">\\r\\n              <app-photo-editor [photos] = \\\"user.photos\\\">\\r\\n              (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\r\\n          </tab>\\r\\n        </tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../../_Services/alertify.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UserService } from '../../_Services/user.service';\r\nimport { AuthService } from '../../_Services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  user: User;\r\n  photoUrl: string;\r\n\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\r\n    private userService: UserService, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.user = data['user'];\r\n    });\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  updateUser() {\r\n    console.log('TokenID: ' + this.authService.decodedToken.nameid );\r\n   // this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\r\n   this.userService.updateUser(this.user.id, this.user).subscribe(next => {\r\n      this.editForm.reset(this.user);\r\n      this.alertify.success('Profile updated succesfully');\r\n    }, error => {\r\n      console.log(error);\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  updateMainPhoto(photoUrl) {\r\n    this.user.photoUrl = photoUrl;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\r\\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container mt-3\\\">\\r\\n\\r\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"minAge\\\">Age From</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\"\\r\\n          [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group px-2\\\">\\r\\n        <label for=\\\"maxAge\\\">Age To</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\r\\n           [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group px-2\\\">\\r\\n        <label for=\\\"gender\\\">Show: </label>\\r\\n        <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\r\\n          [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\r\\n          <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\r\\n            {{gender.display}}\\r\\n          </option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">\\r\\n          Reset Filter\\r\\n      </button>\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"btn-group float-right\\\">\\r\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\r\\n            [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\r\\n          <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\r\\n            [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n    <br>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\r\\n    <app-member-card [user]=\\\"user\\\"></app-member-card>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n<pagination\\r\\n    [boundaryLinks]=\\\"true\\\"\\r\\n    [totalItems]=\\\"pagination.totalItems\\\"\\r\\n    [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n    [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n  previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n\\r\\n</pagination>\\r\\n</div>\\r\\n\"","import { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from './../../_Services/alertify.service';\r\nimport { UserService } from './../../_Services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n\r\n  constructor(private userService: UserService, private alertify: AlertifyService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.userParams.orderBy = 'lastActive';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService.getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\r\n      .subscribe((res: PaginatedResult<User[]>) => {\r\n        this.users = res.result;\r\n        this.pagination = res.pagination;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".card {\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n  margin-bottom: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n  height: 50px;\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  overflow-y: scroll;\\r\\n  height: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\r\\n      No messages yet... say hi by using the message box below\\r\\n    </div>\\r\\n\\r\\n    <ul class=\\\"chat\\\">\\r\\n      <li *ngFor=\\\"let message of messages\\\">\\r\\n        <!-- to them -->\\r\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\r\\n          <span class=\\\"chat-img float-left\\\">\\r\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\r\\n          </span>\\r\\n          <div class=\\\"chat-body\\\">\\r\\n            <div class=\\\"header\\\">\\r\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\r\\n              <small class=\\\"text-muted float-right\\\">\\r\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\r\\n              </small>\\r\\n            </div>\\r\\n            <p>{{message.content}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- to me -->\\r\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\r\\n            <span class=\\\"chat-img float-right\\\">\\r\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\r\\n            </span>\\r\\n            <div class=\\\"chat-body\\\">\\r\\n              <div class=\\\"header\\\">\\r\\n                  <small class=\\\"text-muted\\\">\\r\\n                      <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\r\\n                      <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\r\\n                      <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\r\\n                    </small>\\r\\n                <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\r\\n\\r\\n              </div>\\r\\n              <p>{{message.content}}</p>\\r\\n            </div>\\r\\n          </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <input type=\\\"text\\\"\\r\\n          [(ngModel)]=\\\"newMessage.content\\\"\\r\\n          name=\\\"content\\\"\\r\\n          required\\r\\n          class=\\\"form-control input-sm\\\"\\r\\n          placeholder=\\\"send a private message\\\">\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <button [disabled]=\\\"!messageForm.valid\\\" class=\\\"btn btn-primary\\\">Send</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { UserService } from 'src/app/_Services/user.service';\r\nimport { AuthService } from 'src/app/_Services/auth.service';\r\nimport { AlertifyService } from 'src/app/_Services/alertify.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\n\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @Input() recipientId: number;\r\n  messages: Message[];\r\n  newMessage: any = {};\r\n\r\n  constructor(private userService: UserService, private authService: AuthService,\r\n      private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    const currentUserId = +this.authService.decodedToken.nameid;\r\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\r\n      .pipe(\r\n        tap(messages => {\r\n          for (let i = 0; i < messages.length; i++) {\r\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\r\n              this.userService.markAsRead(currentUserId, messages[i].id);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(messages => {\r\n        this.messages = messages;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n    this.newMessage.recipientId = this.recipientId;\r\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\r\n      .subscribe((message: Message) => {\r\n        this.messages.unshift(message);\r\n        this.newMessage.content = '';\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"img.img-thumbnail {\\r\\n  height: 100px;\\r\\n  min-width: 100px !important;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.nv-file-over {\\r\\n  border: dotted 3px red;\\r\\n}\\r\\n\\r\\ninput[type=file] {\\r\\n  color: transparent;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\r\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\"\\r\\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\r\\n        (click)=\\\"setMainPhoto(photo)\\\"\\r\\n        [disabled]=\\\"photo.isMain\\\">Main</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\"\\r\\n        [disabled]=\\\"photo.isMain\\\"\\r\\n        (click)=\\\"deletePhoto(photo.id)\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\">\\r\\n\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n\\r\\n        <h3>Add Photos</h3>\\r\\n\\r\\n        <div ng2FileDrop\\r\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\r\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n             [uploader]=\\\"uploader\\\"\\r\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\r\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\r\\n            Drop Photos Here\\r\\n        </div>\\r\\n\\r\\n        Multiple\\r\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\r\\n\\r\\n        Single\\r\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\r\\n\\r\\n        <h3>Upload queue</h3>\\r\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\r\\n\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th width=\\\"50%\\\">Name</th>\\r\\n                <th>Size</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n\\r\\n        <div>\\r\\n            <div>\\r\\n                Queue progress:\\r\\n                <div class=\\\"progress mb-4\\\">\\r\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\r\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n                <span class=\\\"fa fa-upload\\\"></span> Upload\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\r\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\r\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel\\r\\n            </button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n                <span class=\\\"fa fa-trash\\\"></span> Remove\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","import { AlertifyService } from './../../_Services/alertify.service';\r\nimport { AuthService } from './../../_Services/auth.service';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { UserService } from 'src/app/_Services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\n\r\nexport class PhotoEditorComponent implements OnInit {\r\n@Input() photos: Photo[];\r\n@Output() getMemberPhotoChange = new EventEmitter<string>();\r\n  uploader: FileUploader;\r\n  hasBaseDropZoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  currentMain: Photo;\r\n\r\n  constructor(private authService: AuthService, private userService: UserService,\r\n    private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any): void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\r\n      authToken: 'Bearer ' + localStorage.getItem('token'),\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const res: Photo = JSON.parse(response);\r\n        const photo = {\r\n          id: res.id,\r\n          url: res.url,\r\n          dateAdded: res.dateAdded,\r\n          description: res.description,\r\n          isMain: res.isMain\r\n        };\r\n        this.photos.push(photo);\r\n\r\n        if (photo.isMain) {\r\n          this.authService.changeMemberPhoto(photo.url);\r\n          this.authService.currentUser.photoUrl = photo.url;\r\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\r\n      this.currentMain = this.photos.filter(p => p.isMain === true)[0];\r\n      this.currentMain.isMain = false;\r\n      photo.isMain = true;\r\n      this.authService.changeMemberPhoto(photo.url);\r\n      this.authService.currentUser.photoUrl = photo.url;\r\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  deletePhoto(id: number) {\r\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\r\n      this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\r\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\r\n        this.alertify.success('Photo has been deleted');\r\n      }, error => {\r\n        this.alertify.error('Failed to delete the photo');\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  margin-top: 15px;\\r\\n}\\r\\n\\r\\n.img-circle {\\r\\n  max-height: 50px;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-5\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\r\\n        <i class=\\\"fa fa-envelope\\\"></i> Unread\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\r\\n        <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\r\\n        <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\r\\n    <h3>No messages</h3>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\r\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\r\\n      <tr>\\r\\n        <th style=\\\"width: 40%\\\">Message</th>\\r\\n        <th style=\\\"width: 20%\\\">From / To</th>\\r\\n        <th style=\\\"width: 20%\\\">Sent / Received</th>\\r\\n        <th style=\\\"width: 20%\\\"></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members',\\r\\n        messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\r\\n          [queryParams]=\\\"{tab: 3}\\\">\\r\\n        <td>{{message.content}}</td>\\r\\n        <td>\\r\\n          <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\r\\n                <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\r\\n                <strong>{{message.senderKnownAs}}</strong>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\r\\n                <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle mr-1\\\">\\r\\n                <strong>{{message.recipientKnownAs}}</strong>\\r\\n          </div>\\r\\n        </td>\\r\\n        <td>{{message.messageSent | timeAgo}}</td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n    <pagination [boundaryLinks]=\\\"true\\\"\\r\\n                [totalItems]=\\\"pagination.totalItems\\\"\\r\\n                [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n                [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n                (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n              previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n  </pagination>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaginatedResult, Pagination } from '../_models/pagination';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../_Services/user.service';\r\nimport { AlertifyService } from '../_Services/alertify.service';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { Message } from '../_models/message';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  messages: Message[];\r\n  pagination: Pagination;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor(private userService: UserService, private authService: AuthService,\r\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.messages = data['messages'].result;\r\n      this.pagination = data['messages'].pagination;\r\n    });\r\n  }\r\n\r\n  loadMessages() {\r\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\r\n      this.pagination.itemsPerPage, this.messageContainer)\r\n      .subscribe((res: PaginatedResult<Message[]>) => {\r\n        this.messages = res.result;\r\n        this.pagination = res.pagination;\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      });\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.alertify.confirm('Are you sure you want to delete this message?', () => {\r\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\r\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        this.alertify.success('Message has been deleted');\r\n      }, error => {\r\n        this.alertify.error('Failed to delete the message');\r\n      });\r\n    });\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadMessages();\r\n  }\r\n\r\n}\r\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n  max-height: 50px;\\r\\n  border: 2px solid white;\\r\\n  display: inline;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Dating App</a>\\r\\n\\r\\n    <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\r\\n        <span class=\\\"mr-1\\\">\\r\\n            <img src=\\\"{{photoUrl || '../../../../assets/user.png'}}\\\" alt=\\\"\\\">\\r\\n        </span>\\r\\n      <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\r\\n        Welcome {{authService.decodedToken?.unique_name | titlecase}}\\r\\n      </a>\\r\\n\\r\\n      <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\r\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\">\\r\\n          <i class=\\\"fa fa-user\\\"></i> Edit Profile</a>\\r\\n        <div class=\\\"dropdown-divider\\\"></div>\\r\\n        <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\r\\n          <i class=\\\"fa fa-sign-out\\\"></i> Logout</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n      <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</nav>\\r\\n\"","import { AlertifyService } from './../_Services/alertify.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  photoUrl: string;\r\n\r\n constructor(public authService: AuthService, private alertify: AlertifyService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success('Logged in successfully');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/members']);\r\n    });\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    this.authService.decodedToken = null;\r\n    this.authService.currentUser = null;\r\n    this.alertify.message('logged out');\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\r\\n      <label class=\\\"radio-inline\\\">\\r\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\r\\n      </label>\\r\\n      <label class=\\\"radio-inline ml-3\\\">\\r\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\r\\n      </label>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"text\\\"\\r\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors\\r\\n        && registerForm.get('username').touched}\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"username\\\"\\r\\n      placeholder=\\\"Username\\\">\\r\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\r\\n        placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\r\\n        </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"password\\\"\\r\\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors\\r\\n        && registerForm.get('password').touched}\\\"\\r\\n      class=\\\"form-control\\\"\\r\\n      formControlName=\\\"password\\\"\\r\\n      placeholder=\\\"Password\\\">\\r\\n      <div class=\\\"invalid-feedback\\\"\\r\\n        *ngIf=\\\"registerForm.get('password').hasError('required')\\r\\n          && registerForm.get('password').touched\\\">\\r\\n          Password is required\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback\\\"\\r\\n      *ngIf=\\\"registerForm.get('password').hasError('minlength')\\r\\n        && registerForm.get('password').touched\\\">\\r\\n        Password must be at least 4 characters\\r\\n    </div>\\r\\n    <div class=\\\"invalid-feedback\\\"\\r\\n    *ngIf=\\\"registerForm.get('password').hasError('maxlength')\\r\\n      && registerForm.get('password').touched\\\">\\r\\n      Password cannot exceed 8 characters\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <input\\r\\n        [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors\\r\\n          && registerForm.get('confirmPassword').touched\\r\\n          || registerForm.get('confirmPassword').touched\\r\\n          && registerForm.hasError('mismatch')}\\\"\\r\\n        type=\\\"password\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        formControlName=\\\"confirmPassword\\\"\\r\\n        placeholder=\\\"Confirm Password\\\">\\r\\n        <div class=\\\"invalid-feedback\\\"\\r\\n        *ngIf=\\\"registerForm.get('confirmPassword').hasError('required')\\r\\n          && registerForm.get('confirmPassword').touched\\\">\\r\\n          Confirm Password is required\\r\\n      </div>\\r\\n      <div class=\\\"invalid-feedback\\\"\\r\\n      *ngIf=\\\"registerForm.hasError('mismatch')\\r\\n        && registerForm.get('confirmPassword').touched\\\">\\r\\n        Passwords must match\\r\\n    </div>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"form-group text-center\\\">\\r\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\r\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\"","import { User } from './../_models/user';\r\nimport { AlertifyService } from './../_Services/alertify.service';\r\nimport { AuthService } from './../_Services/auth.service';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { validateConfig } from '@angular/router/src/config';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(private authService: AuthService, private router: Router,\r\n    private alertify: AlertifyService, private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: [null, Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertify.success('Registration successful');\r\n      }, error => {\r\n        this.alertify.error(error);\r\n        console.log(error);\r\n      }, () => {\r\n        this.authService.login(this.user).subscribe(() => {\r\n          this.router.navigate(['/members']);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n}\r\n","import { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver.';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport {Routes } from '@angular/router';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\n\r\nexport const appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '', // localhost:4200/\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'members', component: MemberListComponent, resolve: {users: MemberListResolver}},\r\n      {path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver}},\r\n      {path: 'member/edit', component: MemberEditComponent,\r\n      resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n      {path: 'messages', component: MessagesComponent, resolve: { messages: MessagesResolver}},\r\n      {path: 'lists', component: ListsComponent, resolve: {users: ListsResolver}}\r\n    ]\r\n  },\r\n  {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000/api/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}